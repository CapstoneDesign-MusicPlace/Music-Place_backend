name: Deploy to Compute Engine

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Add execute permission to Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Build project without running tests
        run: ./gradlew build -x test

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce

      - name: Install standalone Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

      - name: Verify Docker Compose installation
        run: docker-compose --version

      - name: Generate .env file
        run: |
          cat <<EOF > .env
          DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
          SPRING_PROFILES_ACTIVE=prod
          DB_URL=jdbc:mysql://mysql:3306/${{ secrets.MYSQL_DATABASE }}
          DB_USER=root
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
          EOF
        shell: bash

      - name: Build and push Docker images
        run: |
          docker-compose -f ${{ github.workspace }}/docker-compose.yml build
          docker-compose -f ${{ github.workspace }}/docker-compose.yml push

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up GCP configuration
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set compute/zone ${{ secrets.GCP_ZONE }}

      - name: Copy docker-compose.yml to VM
        run: |
          gcloud compute scp ${{ github.workspace }}/docker-compose.yml ${{ secrets.VM_NAME }}:/tmp/docker-compose.yml --zone ${{ secrets.GCP_ZONE }}
      
      - name: Move docker-compose.yml to appropriate directory
        run: |
          gcloud compute ssh ${{ secrets.VM_NAME }} --zone ${{ secrets.GCP_ZONE }} --command "
            sudo mv /tmp/docker-compose.yml /home/${{ secrets.VM_USER }}/docker-compose.yml &&
            sudo chown $USER:$USER /home/${{ secrets.VM_USER }}/docker-compose.yml
          "

      - name: Pull Docker images and start services on VM
        run: |
          gcloud compute ssh ${{ secrets.VM_NAME }} --zone ${{ secrets.GCP_ZONE }} --command "
            export $(cat /home/${{ secrets.VM_USER }}/.env | xargs) &&
            cd /home/${{ secrets.VM_USER }} &&
            sudo docker login -u '${{ secrets.DOCKER_USERNAME }}' -p '${{ secrets.DOCKER_PASSWORD }}' &&
            sudo docker-compose -f docker-compose.yml pull &&
            sudo docker-compose -f docker-compose.yml up -d
          "

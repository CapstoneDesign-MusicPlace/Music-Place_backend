name: Deploy to Compute Engine

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Add execute permission to Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Build project without running tests
        run: ./gradlew build -x test

      - name: Verify Docker Compose installation
        run: docker-compose --version

      - name: Generate .env file
        run: |
          cat <<EOF > .env
          DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
          SPRING_PROFILES_ACTIVE=prod
          DB_URL=jdbc:mysql://mysql:3306/${{ secrets.MYSQL_DATABASE }}
          DB_USER=root
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
          EOF
        shell: bash

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker-compose push

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up GCP configuration
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set compute/zone ${{ secrets.GCP_ZONE }}

      - name: Pull Docker images and start services on VM
        run: |
          gcloud compute ssh ${{ secrets.VM_NAME }} --zone ${{ secrets.GCP_ZONE }} --command "
            sudo docker login -u '${{ secrets.DOCKER_USERNAME }}' -p '${{ secrets.DOCKER_PASSWORD }}' &&
            sudo ./docker-compose pull &&
            sudo ./docker-compose up -d
            "
